//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
package cfg.test;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;



public final class TestSize {
    public TestSize(JsonObject __json__) { 
        id = __json__.get("id").getAsInt();
        { com.google.gson.JsonArray _json0_ = __json__.get("x1").getAsJsonArray(); int __n0 = _json0_.size(); x1 = new int[__n0]; int __index0=0; for(JsonElement __e0 : _json0_) { int __v0;  __v0 = __e0.getAsInt();  x1[__index0++] = __v0; }   }
        { com.google.gson.JsonArray _json0_ = __json__.get("x2").getAsJsonArray(); x2 = new java.util.ArrayList<Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _v0;  _v0 = _e0.getAsInt();  x2.add(_v0); }   }
        { com.google.gson.JsonArray _json0_ = __json__.get("x3").getAsJsonArray(); x3 = new java.util.HashSet<Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _v0;  _v0 = _e0.getAsInt();  x3.add(_v0); }   }
        { com.google.gson.JsonArray _json0_ = __json__.get("x4").getAsJsonArray(); x4 = new java.util.HashMap<Integer, Integer>(_json0_.size()); for(JsonElement _e0 : _json0_) { int _k0;  _k0 = _e0.getAsJsonArray().get(0).getAsInt(); int _v0;  _v0 = _e0.getAsJsonArray().get(1).getAsInt();  x4.put(_k0, _v0); }   }
    }

    public TestSize(int id, int[] x1, java.util.ArrayList<Integer> x2, java.util.HashSet<Integer> x3, java.util.HashMap<Integer, Integer> x4 ) {
        this.id = id;
        this.x1 = x1;
        this.x2 = x2;
        this.x3 = x3;
        this.x4 = x4;
    }

    public static TestSize deserializeTestSize(JsonObject __json__) {
        return new TestSize(__json__);
    }

    public final int id;
    public final int[] x1;
    public final java.util.ArrayList<Integer> x2;
    public final java.util.HashSet<Integer> x3;
    public final java.util.HashMap<Integer, Integer> x4;


    public void resolve(java.util.HashMap<String, Object> _tables) {
    }

    @Override
    public String toString() {
        return "{ "
        + "id:" + id + ","
        + "x1:" + x1 + ","
        + "x2:" + x2 + ","
        + "x3:" + x3 + ","
        + "x4:" + x4 + ","
        + "}";
    }
}
